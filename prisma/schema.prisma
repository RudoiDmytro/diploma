generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  password   String
  username   String       @unique
  role       Role         @default(SEEKER)
  jobs       Job[]
  assesments Assessment[]

  @@map("users")
}

enum Role {
  SEEKER
  EMPLOYER
  CHECKER
}

model Job {
  id               Int      @id @default(autoincrement())
  slug             String   @unique
  title            String
  type             String
  locationType     String
  location         String?
  description      String
  salary           Int
  companyName      String
  applicationEmail String?
  applicationUrl   String?
  companyLogoUrl   String?
  approved         Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  User             User?    @relation(fields: [userId], references: [id])
  userId           Int?
  tag              Tag[]

  @@map("jobs")
}

model Assessment {
  id           Int       @id @default(autoincrement())
  slug         String    @unique
  title        String
  duration     DateTime
  categoryName String    @unique
  category     Category? @relation(fields: [categoryName], references: [name])
  description  String?
  approved     Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  type         String
  tag          Tag[]
  tasks        Task[]
  User         User?     @relation(fields: [userId], references: [id])
  userId       Int?

  @@map("assessments")
}

model Category {
  categoryId Int          @id @default(autoincrement())
  name       String       @unique
  tag        Tag[]
  assessment Assessment[]

  @@map("categories")
}

model Tag {
  tagId      Int          @id @default(autoincrement())
  tagName    String
  category   Category[]
  assessment Assessment[]
  Job        Job?         @relation(fields: [jobId], references: [id])
  jobId      Int?

  @@map("tags")
}

model Task {
  token        String     @unique
  evaluation   Evaluation @relation(fields: [token], references: [taskToken])
  assessmentId Int
  type         TaskType
  taskFile     String?
  assessment   Assessment @relation(fields: [assessmentId], references: [id])

  @@map("tasks")
}

enum TaskType {
  PROBLEM
  TEST
}

model Evaluation {
  taskToken   String  @unique
  score       Int
  description String?
  task        Task[]

  @@map("evaluations")
}
