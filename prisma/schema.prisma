generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  username String @unique
  role     Role   @default(SEEKER)

  @@map("users")
}

enum Role {
  SEEKER
  EMPLOYER
  CHECKER
}

model Job {
  id               Int      @id @default(autoincrement())
  slug             String   @unique
  title            String
  type             String
  locationType     String
  location         String?
  description      String
  salary           Int
  companyName      String
  applicationEmail String?
  applicationUrl   String?
  companyLogoUrl   String?
  approved         Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("jobs")
}

model Assessment {
  id          Int        @id @default(autoincrement())
  slug        String     @unique
  title       String
  duration    DateTime
  category    Category[]
  description String?
  approved    Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  tasks       Task[]

  @@map("assessments")
}

model Category {
  categoryId   Int         @id @default(autoincrement())
  categoryName String
  assessment   Assessment? @relation(fields: [assessmentId], references: [id])
  assessmentId Int?

  @@map("categories")
}

model Task {
  token        String     @unique
  evaluation   Evaluation @relation(fields: [token], references: [taskToken])
  assessmentId Int
  type         TaskType
  taskFile     String?
  assessment   Assessment @relation(fields: [assessmentId], references: [id])

  @@map("tasks")
}

enum TaskType {
  PROBLEM
  TEST
}

model Evaluation {
  taskToken   String  @unique
  score       Int
  description String?
  task        Task[]

  @@map("evaluations")
}
