generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  password   String
  username   String       @unique
  role       Role         @default(SEEKER)
  jobs       Job[]
  assesments Assessment[]

  @@map("users")
}

enum Role {
  SEEKER
  EMPLOYER
  CHECKER
}

model Job {
  slug             String   @id @db.VarChar(2000)
  title            String
  type             String
  locationType     String
  location         String?
  description      String
  salary           Int
  companyName      String
  applicationEmail String?
  applicationUrl   String?
  companyLogoUrl   String?
  approved         Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User?    @relation(fields: [userId], references: [id])
  userId           Int?
  tag              Tag[]

  @@map("jobs")
}

model Assessment {
  slug         String   @id @db.VarChar(2000)
  title        String
  duration     DateTime
  category     Category @relation(fields: [categoryName], references: [naming])
  description  String?
  approved     Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  tasks        Task[]
  categoryName String   @db.VarChar(50)
  tags         Tag[]
  user         User?     @relation(fields: [userId], references: [id])
  userId       Int?

  @@map("assessments")
}

model Category {
  naming     String       @id @db.VarChar(50)
  assessment Assessment[]
  tag        Tag[]

  @@map("categories")
}

model Tag {
  naming     String       @id @db.VarChar(50)
  category   Category[]
  job        Job[]
  assessment Assessment[]

  @@map("tags")
}

model Task {
  token           String     @id @db.VarChar(2000)
  evaluation      Evaluation @relation(fields: [token], references: [taskToken])
  type            TaskType
  taskFile        String?
  assessment      Assessment @relation(fields: [assessment_slug], references: [slug])
  assessment_slug String

  @@map("tasks")
}

enum TaskType {
  PROBLEM
  TEST
}

model Evaluation {
  taskToken   String  @id @db.VarChar(2000)
  score       Int
  description String?
  task        Task[]

  @@map("evaluations")
}
